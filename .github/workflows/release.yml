name: Release

on:
  push:
    branches:
      - master
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version
        id: bump_version
        run: |
          # Get the current version from package.json
          current_version=$(node -p "require('./package.json').version")
          echo "Current version: $current_version"
          
          # Split the version into major, minor, and patch
          IFS='.' read -r major minor patch <<< "$current_version"
          
          # Increment patch version
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          echo "New version: $new_version"
          
          # Update package.json with new version
          npm version $new_version --no-git-tag-version
          
          # Set output for later steps
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo "Version bumped from $current_version to $new_version"

      - name: Build
        run: npm run build

      - name: Create Release Pull Request or Publish
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: node
          package-name: "pr-genie"
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create GitHub Release
        if: ${{ steps.release.outputs.release_created }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          name: Release v${{ steps.bump_version.outputs.new_version }}
          body: |
            ## What's Changed
            ${{ steps.release.outputs.changelog }}
            
            ## Installation
            ```bash
            npm install pr-genie
            ```
            
            For detailed usage instructions, see the [documentation](./README.md).
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and Push Changes
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to v${{ steps.bump_version.outputs.new_version }}"
          git push 